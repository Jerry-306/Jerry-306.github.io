{"version":3,"sources":["components/MyNavBar/index.js","components/MyNavBar/index.module.css","pages/Register/index.module.css","pages/Register/index.js"],"names":["MyNavBar","defaultClick","props","history","goBack","this","children","className","rightContent","onLeftClick","styles","navbar","join","mode","icon","Component","withRouter","module","exports","alert","Register","state","username","password","root","navHeader","size","form","formItem","input","name","placeholder","error","component","type","formSubmit","submit","withFormik","mapPropsToValues","validationSchema","yup","shape","required","matches","handleSubmit","values","a","API","post","res","data","status","description","text","onPress","info"],"mappings":"uMAMMA,E,4MAUFC,aAAe,kBAAM,EAAKC,MAAMC,QAAQC,U,4CACxC,WAAU,IAAD,EACoDC,KAAKH,MAAvDI,EADF,EACEA,SAAUC,EADZ,EACYA,UAAWC,EADvB,EACuBA,aAAcC,EADrC,EACqCA,YAC1C,OACI,8BACI,mBACIF,UAAW,CAACG,IAAOC,OAAQJ,GAAa,IAAIK,KAAK,KACjDC,KAAK,QACLC,KAAM,mBAAGP,UAAU,uBACnBE,YAAaA,GAAeJ,KAAKJ,aACjCO,aAAcA,EALlB,SAOKF,U,GAtBES,aA6BRC,gBAAWhB,I,oBClC1BiB,EAAOC,QAAU,CAAC,OAAS,2B,oBCA3BD,EAAOC,QAAU,CAAC,KAAO,uBAAuB,UAAY,4BAA4B,KAAO,uBAAuB,SAAW,2BAA2B,MAAQ,wBAAwB,OAAS,yBAAyB,MAAQ,0B,mRCiBhOC,EAAQ,IAAMA,MACdC,E,4MACFC,MAAQ,CACJC,SAAU,GACVC,SAAU,I,4CAGd,WACI,OACI,sBAAKhB,UAAWG,IAAOc,KAAvB,UACI,cAAC,IAAD,CAAUjB,UAAWG,IAAOe,UAA5B,sCAGA,mBAAYC,KAAK,OAIjB,4BACI,eAAC,IAAD,CAAMnB,UAAWG,IAAOiB,KAAxB,UACI,qBAAKpB,UAAWG,IAAOkB,SAAvB,SACI,cAAC,IAAD,CACIrB,UAAWG,IAAOmB,MAClBC,KAAK,WACLC,YAAY,qCAGpB,cAAC,IAAD,CAAcxB,UAAWG,IAAOsB,MAAOF,KAAK,WAAWG,UAAU,QACjE,qBAAK1B,UAAWG,IAAOkB,SAAvB,SACI,cAAC,IAAD,CACIrB,UAAWG,IAAOmB,MAClBC,KAAK,WACLI,KAAK,WACLH,YAAY,qCAGpB,cAAC,IAAD,CAAcxB,UAAWG,IAAOsB,MAAOF,KAAK,WAAWG,UAAU,QACjE,qBAAK1B,UAAWG,IAAOyB,WAAvB,SACI,wBACI5B,UAAWG,IAAO0B,OAClBF,KAAK,SAFT,0C,GApCLnB,aAiDvBK,EAAWiB,YAAW,CAElBC,iBAAiB,iBAAO,CAAEhB,SAAU,GAAIC,SAAU,KAElDgB,iBAAkBC,MAAaC,MAAM,CACjCnB,SAAUkB,MAAaE,SAAS,4BAAQC,QA1D9B,qBA0DiD,qIAC3DpB,SAAUiB,MAAaE,SAAS,4BAAQC,QA1DhC,sBA0DiD,wIAG7DC,aAAa,WAAD,4BAAE,WAAQC,EAAR,8BAAAC,EAAA,6DAAkB5C,EAAlB,EAAkBA,MAEpBoB,EAAuBuB,EAAvBvB,SAAUC,EAAasB,EAAbtB,SAFR,SAGQwB,IAAIC,KAAK,mBAAoB,CAC3C1B,WACAC,aALM,OAGJ0B,EAHI,SASsBA,EAAIC,KAA5BC,EATE,EASFA,OAAQC,EATN,EASMA,YACA,MAAXD,EAEDhC,EAAM,eAAM,2EAAgB,CACxB,CAAEkC,KAAM,gBACR,CAAEA,KAAM,eAAMC,QAAS,kBAAMpD,EAAMC,QAAQC,aAI/C,IAAMmD,KAAKH,EAAa,EAAG,MAAM,GAlB3B,2CAAF,qDAAC,IATNf,CA8BRjB,GACYA","file":"static/js/22.fc3e1b94.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport {withRouter} from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport {NavBar} from 'antd-mobile'\r\nimport styles from './index.module.css'\r\n\r\nclass MyNavBar extends Component {\r\n    // 属性校验\r\n    static propTypes = {\r\n        children: PropTypes.string.isRequired,\r\n        onLeftClick: PropTypes.func,\r\n        className: PropTypes.string,\r\n        rightContent: PropTypes.array\r\n    }\r\n\r\n    // 默认点击返回按钮事件\r\n    defaultClick = () => this.props.history.goBack();\r\n    render() {\r\n        const {children, className, rightContent, onLeftClick} = this.props;\r\n        return (\r\n            <div>\r\n                <NavBar\r\n                    className={[styles.navbar, className || ''].join(' ')}\r\n                    mode=\"light\"\r\n                    icon={<i className=\"iconfont icon-back\"/>}\r\n                    onLeftClick={onLeftClick || this.defaultClick} \r\n                    rightContent={rightContent}\r\n                >\r\n                    {children}\r\n                </NavBar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(MyNavBar);\r\n/* \r\n此组件用于封装顶部导航栏\r\n只有路由组件才有history 等API\r\n于是， 利用 withRouter（）函数 包裹一般组件，就可以把一般组件变成路由组件 \r\n*/","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"MyNavBar_navbar__2I-jd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Register_root__16AI1\",\"navHeader\":\"Register_navHeader__uDXVV\",\"form\":\"Register_form__1uK6u\",\"formItem\":\"Register_formItem__Q_JN0\",\"input\":\"Register_input__1eI6h\",\"submit\":\"Register_submit__3DZVt\",\"error\":\"Register_error__1_muh\"};","import React, { Component } from 'react'\r\n\r\nimport { WingBlank, WhiteSpace, Toast, Modal } from 'antd-mobile'\r\n\r\n// 引入withFormik高阶组件，用于表单校验\r\nimport { withFormik, Form, Field, ErrorMessage } from 'formik'\r\n// 导入yup\r\nimport * as yup from 'yup'\r\n\r\nimport API from '../../utils/api'\r\nimport MyNavBar from '../../components/MyNavBar'\r\n\r\nimport styles from './index.module.css'\r\n\r\n// 校验规则\r\nconst REG_UNAME = /^[a-zA-Z_\\d]{5,8}$/;\r\nconst REG_PWD = /^[a-zA-Z_\\d]{5,12}$/;\r\n\r\nconst alert = Modal.alert;\r\nclass Register extends Component {\r\n    state = {\r\n        username: '',\r\n        password: ''\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles.root}>\r\n                <MyNavBar className={styles.navHeader} >\r\n                    账号注册\r\n                </MyNavBar>\r\n                <WhiteSpace size=\"x1\" />\r\n\r\n                {/* 登录表单 */}\r\n                {/* 左右留白 */}\r\n                <WingBlank>\r\n                    <Form className={styles.form} >\r\n                        <div className={styles.formItem}>\r\n                            <Field \r\n                                className={styles.input} \r\n                                name=\"username\" \r\n                                placeholder=\"请输入账号\" \r\n                            ></Field>\r\n                        </div>\r\n                        <ErrorMessage className={styles.error} name=\"username\" component=\"div\"></ErrorMessage>\r\n                        <div className={styles.formItem}>\r\n                            <Field \r\n                                className={styles.input} \r\n                                name=\"password\" \r\n                                type=\"password\"\r\n                                placeholder=\"请输入密码\" \r\n                            ></Field>\r\n                        </div>\r\n                        <ErrorMessage className={styles.error} name=\"password\" component=\"div\"></ErrorMessage>\r\n                        <div className={styles.formSubmit}>\r\n                            <button\r\n                                className={styles.submit}\r\n                                type=\"submit\"\r\n                            >注  册</button>\r\n                        </div>\r\n                    </Form>\r\n                </WingBlank>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nRegister = withFormik({\r\n    // 为Register组件提供状态\r\n    mapPropsToValues:() => ({ username: '', password: '' }),\r\n    // 添加校验规则\r\n    validationSchema: yup.object().shape({\r\n        username: yup.string().required('账号必填').matches(REG_UNAME, '账号长度为5~8位，只能由数字、字母、下划线组成'),\r\n        password: yup.string().required('密码必填').matches(REG_PWD, '密码长度为5~12位，只能由数字、字母、下划线组成'),\r\n    }),\r\n    // 为Register提供表单提交方法\r\n    handleSubmit: async ( values, { props } ) => {\r\n        // 获取账号、密码\r\n        const { username, password } = values;\r\n        const res = await API.post('/user/registered', {\r\n            username,\r\n            password\r\n        });\r\n\r\n        // 获取返回数据\r\n        const { status, description } = res.data;\r\n        if ( status === 200 ) {\r\n            // 注册成功\r\n            alert('提示', '注册成功，返回登录页面？', [\r\n                { text: '取消'},\r\n                { text: '确定', onPress: () => props.history.goBack() }\r\n            ] )\r\n        } else {\r\n            // 注册失败\r\n            Toast.info(description, 2, null, false);\r\n        }\r\n    }\r\n})(Register);\r\nexport default Register"],"sourceRoot":""}