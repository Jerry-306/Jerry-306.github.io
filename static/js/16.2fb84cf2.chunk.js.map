{"version":3,"sources":["components/MyNavBar/index.js","components/MyNavBar/index.module.css","../node_modules/antd-mobile/lib/nav-bar/style/css.js","../node_modules/antd-mobile/lib/nav-bar/index.js","components/HouseItem/index.js","components/HouseItem/index.module.css","pages/Map/index.module.css","pages/Map/index.js"],"names":["MyNavBar","defaultClick","props","history","goBack","this","children","className","rightContent","onLeftClick","styles","navbar","join","mode","icon","Component","withRouter","module","exports","require","Object","defineProperty","value","_extends3","_interopRequireDefault","_classCallCheck3","_createClass3","_possibleConstructorReturn3","_inherits3","_classnames2","React","obj","__esModule","newObj","key","prototype","hasOwnProperty","call","_interopRequireWildcard","__rest","s","e","t","p","indexOf","getOwnPropertySymbols","i","length","NavBar","_React$Component","__proto__","getPrototypeOf","apply","arguments","_a","prefixCls","leftContent","restProps","createElement","role","onClick","defaultProps","HouseItem","src","title","desc","tags","price","style","house","imgWrap","img","alt","content","map","tag","index","tagClass","priceNum","labelStyle","cursor","border","padding","whiteSpace","fontSize","color","textAlign","BMapGL","window","Map","state","housesList","isShowList","setMap","JSON","parse","localStorage","getItem","label","Geocoder","getPoint","point","a","centerAndZoom","enableScrollWheelZoom","setTilt","addControl","ScaleControl","ZoomControl","LocationControl","renderOverlays","info","addEventListener","setState","id","loading","API","get","res","hide","data","body","getTypeAndZoom","nextZoom","type","forEach","item","createOverlays","zoom","getZoom","coord","longitude","latitude","areaName","count","areaPoint","Point","createCircle","createRect","name","Label","position","offset","Size","setContent","bubble","setStyle","setTimeout","clearOverlays","addOverlay","rect","housename","housenum","arrow","getHousesList","list","BASE_URL","houseImg","push","houseCode","container","houseList","show","titleWrap","listTitle","titleMore","to","houseItems","renderHousesList"],"mappings":"uMAMMA,E,4MAUFC,aAAe,kBAAM,EAAKC,MAAMC,QAAQC,U,4CACxC,WACI,MAAyDC,KAAKH,MAAvDI,EAAP,EAAOA,SAAUC,EAAjB,EAAiBA,UAAWC,EAA5B,EAA4BA,aAAcC,EAA1C,EAA0CA,YAC1C,OACI,8BACI,mBACIF,UAAW,CAACG,IAAOC,OAAQJ,GAAa,IAAIK,KAAK,KACjDC,KAAK,QACLC,KAAM,mBAAGP,UAAU,uBACnBE,YAAaA,GAAeJ,KAAKJ,aACjCO,aAAcA,EALlB,SAOKF,U,GAtBES,aA6BRC,gBAAWhB,I,oBClC1BiB,EAAOC,QAAU,CAAC,OAAS,2B,iCCC3BC,EAAQ,IAERA,EAAQ,M,iCCFRC,OAAOC,eAAeH,EAAS,aAAc,CACzCI,OAAO,IAGX,IAEIC,EAAYC,EAFAL,EAAQ,IAMpBM,EAAmBD,EAFAL,EAAQ,IAM3BO,EAAgBF,EAFAL,EAAQ,IAMxBQ,EAA8BH,EAFAL,EAAQ,IAMtCS,EAAaJ,EAFAL,EAAQ,IAMrBU,EAAeL,EAFDL,EAAQ,KAMtBW,EAEJ,SAAiCC,GAAO,GAAIA,GAAOA,EAAIC,WAAc,OAAOD,EAAc,IAAIE,EAAS,GAAI,GAAW,MAAPF,EAAe,IAAK,IAAIG,KAAOH,EAAWX,OAAOe,UAAUC,eAAeC,KAAKN,EAAKG,KAAMD,EAAOC,GAAOH,EAAIG,IAAmC,OAAzBD,EAAM,QAAcF,EAAYE,EAFzPK,CAFCnB,EAAQ,IAMrB,SAASK,EAAuBO,GAAO,OAAOA,GAAOA,EAAIC,WAAaD,EAAM,CAAE,QAAWA,GAEzF,IAAIQ,EAA0C,SAAUC,EAAGC,GACvD,IAAIC,EAAI,GACR,IAAK,IAAIC,KAAKH,EACNpB,OAAOe,UAAUC,eAAeC,KAAKG,EAAGG,IAAMF,EAAEG,QAAQD,GAAK,IAAGD,EAAEC,GAAKH,EAAEG,IAChF,GAAS,MAALH,GAAqD,oBAAjCpB,OAAOyB,sBAA2C,KAAIC,EAAI,EAAb,IAAgBH,EAAIvB,OAAOyB,sBAAsBL,GAAIM,EAAIH,EAAEI,OAAQD,IACjIL,EAAEG,QAAQD,EAAEG,IAAM,IAAGJ,EAAEC,EAAEG,IAAMN,EAAEG,EAAEG,KAC1C,OAAOJ,GAGRM,EAAS,SAAUC,GAGnB,SAASD,IAEL,OADA,EAAIvB,EAAgB,SAAapB,KAAM2C,IAChC,EAAIrB,EAA2B,SAAatB,MAAO2C,EAAOE,WAAa9B,OAAO+B,eAAeH,IAASI,MAAM/C,KAAMgD,YA4C7H,OAhDA,EAAIzB,EAAU,SAAaoB,EAAQC,IAOnC,EAAIvB,EAAa,SAAasB,EAAQ,CAAC,CACnCd,IAAK,SACLZ,MAAO,WACH,IAAIgC,EAAKjD,KAAKH,MACVqD,EAAYD,EAAGC,UACfhD,EAAY+C,EAAG/C,UACfD,EAAWgD,EAAGhD,SACdO,EAAOyC,EAAGzC,KACVC,EAAOwC,EAAGxC,KACVL,EAAc6C,EAAG7C,YACjB+C,EAAcF,EAAGE,YACjBhD,EAAe8C,EAAG9C,aAClBiD,EAAYlB,EAAOe,EAAI,CAAC,YAAa,YAAa,WAAY,OAAQ,OAAQ,cAAe,cAAe,iBAChH,OAAOxB,EAAM4B,cACT,OACA,EAAInC,EAAS,SAAa,GAAIkC,EAAW,CAAElD,WAAW,EAAIsB,EAAY,SAAatB,EAAWgD,EAAWA,EAAY,IAAM1C,KAC3HiB,EAAM4B,cACF,MACA,CAAEnD,UAAWgD,EAAY,QAASI,KAAM,SAAUC,QAASnD,GAC3DK,EAEAgB,EAAM4B,cACF,OACA,CAAEnD,UAAWgD,EAAY,aAAc,cAAe,QACtDzC,GACA,KACJ0C,GAEJ1B,EAAM4B,cACF,MACA,CAAEnD,UAAWgD,EAAY,UACzBjD,GAEJwB,EAAM4B,cACF,MACA,CAAEnD,UAAWgD,EAAY,UACzB/C,QAKTwC,EAjDE,CAkDXlB,EAAMf,WAERG,EAAO,QAAc8B,EAErBA,EAAOa,aAAe,CAClBN,UAAW,YACX1C,KAAM,OACNJ,YAAa,cAEjBQ,EAAOC,QAAUA,EAAO,S,6JCtGH4C,E,4JAUjB,WACI,MAAwDzD,KAAKH,MAAtD6D,EAAP,EAAOA,IAAKC,EAAZ,EAAYA,MAAOC,EAAnB,EAAmBA,KAAMC,EAAzB,EAAyBA,KAAMC,EAA/B,EAA+BA,MAAOC,EAAtC,EAAsCA,MAAOR,EAA7C,EAA6CA,QAC7C,OACI,sBAAKrD,UAAWG,IAAO2D,MAAOD,MAAOA,EAAOR,QAASA,EAArD,UACI,qBAAKrD,UAAWG,IAAO4D,QAAvB,SACA,qBACI/D,UAAWG,IAAO6D,IAClBR,IAAKA,EACLS,IAAI,OAGR,sBAAKjE,UAAWG,IAAO+D,QAAvB,UACI,oBAAIlE,UAAWG,IAAOsD,MAAtB,SAA8BA,IAC9B,qBAAKzD,UAAWG,IAAOuD,KAAvB,SAA8BA,IAC9B,8BAEKC,EAAKQ,KAAI,SAACC,EAAKC,GACZ,IAAMC,EAAW,OAASD,EAAQ,EAAI,GACtC,OACI,sBACIrE,UAAW,CAACG,IAAOiE,IAAKjE,IAAOmE,IAAWjE,KAAK,KADnD,SAIK+D,GAFIA,QAOrB,sBAAKpE,UAAWG,IAAOyD,MAAvB,UACI,sBAAM5D,UAAWG,IAAOoE,SAAxB,SAAmCX,IADvC,8B,GAtCmBpD,c,oBCHvCE,EAAOC,QAAU,CAAC,MAAQ,yBAAyB,QAAU,2BAA2B,IAAM,uBAAuB,QAAU,2BAA2B,MAAQ,yBAAyB,KAAO,wBAAwB,MAAQ,yBAAyB,SAAW,4BAA4B,IAAM,uBAAuB,KAAO,wBAAwB,KAAO,wBAAwB,KAAO,wBAAwB,KAAO,0B,oBCAnaD,EAAOC,QAAU,CAAC,IAAM,iBAAiB,UAAY,uBAAuB,OAAS,oBAAoB,KAAO,kBAAkB,KAAO,kBAAkB,MAAQ,mBAAmB,UAAY,uBAAuB,SAAW,sBAAsB,UAAY,uBAAuB,KAAO,kBAAkB,UAAY,uBAAuB,UAAY,uBAAuB,UAAY,uBAAuB,WAAa,0B,gPCSta6D,EAAa,CACfC,OAAQ,UACRC,OAAQ,2BACRC,QAAS,MACTC,WAAY,SACZC,SAAU,OACVC,MAAO,qBACPC,UAAW,UAGTC,EAASC,OAAOD,OACDE,E,4MACjBC,MAAQ,CAEJC,WAAY,GAEZC,YAAY,G,uDAEhB,WACIvF,KAAKwF,W,oBAIT,WAAW,IAAD,OAEAnB,EAAM,IAAIa,EAAOE,IAAI,aAE3B,EAAuBK,KAAKC,MAAOC,aAAaC,QAAQ,aAAjDC,EAAP,EAAOA,MAAO5E,EAAd,EAAcA,MAEdjB,KAAKqE,IAAMA,GAEG,IAAIa,EAAOY,UAEnBC,SAASF,EAAf,uCAAsB,WAAMG,GAAN,SAAAC,EAAA,sDACdD,GAEA3B,EAAI6B,cAAcF,EAAO,IAEzB3B,EAAI8B,uBAAsB,GAE1B9B,EAAI+B,QAAQ,IAEZ/B,EAAIgC,WAAW,IAAInB,EAAOoB,cAE1BjC,EAAIgC,WAAW,IAAInB,EAAOqB,aAE1BlC,EAAIgC,WAAW,IAAInB,EAAOsB,iBAG1B,EAAKC,eAAexF,IAEpB,IAAMyF,KAAK,kFAAkB,EAAG,MAAM,GAlBxB,2CAAtB,sDAoBGb,GAGHxB,EAAIsC,iBAAiB,aAAa,WAC1B,EAAKtB,MAAME,YACX,EAAKqB,SAAS,CACVrB,YAAY,S,mEAS5B,WAAqBsB,GAArB,8BAAAZ,EAAA,sEAEQ,IAAMa,QAAQ,aAAc,EAAG,MAAM,GAF7C,SAG0BC,IAAIC,IAAJ,uBAAwBH,IAHlD,OAGcI,EAHd,OAIQ,IAAMC,OACAC,EAAOF,EAAIE,KAAKC,KAL9B,EAQmCpH,KAAKqH,iBAAxBC,EARhB,EAQgBA,SAAUC,EAR1B,EAQ0BA,KAElBJ,EAAKK,SAAQ,SAAAC,GAET,EAAKC,eAAeD,EAAMH,EAAUC,MAZhD,kDAeQ,IAAML,OAfd,0D,mFAuBA,WAEI,IACII,EAAUC,EADRI,EAAO3H,KAAKqE,IAAIuD,UAiBtB,OAdID,GAAQ,IAAMA,EAAO,IAErBL,EAAW,GAEXC,EAAO,UACAI,GAAQ,IAAMA,EAAO,IAE5BL,EAAW,GACXC,EAAO,UACAI,GAAQ,IAAMA,EAAO,KAE5BJ,EAAO,QAGJ,CACHD,WACAC,U,4BAKR,SAAeE,EAAME,EAAMJ,GACvB,MAKIE,EAJAI,MAASC,EADb,EACaA,UAAWC,EADxB,EACwBA,SACbC,EAGPP,EAHA5B,MACAoC,EAEAR,EAFAQ,MACAhH,EACAwG,EADAxG,MAIEiH,EAAY,IAAIhD,EAAOiD,MAAML,EAAWC,GACjC,WAATR,EACAvH,KAAKoI,aAAaF,EAAWF,EAAUC,EAAOhH,EAAO0G,GAErD3H,KAAKqI,WAAWH,EAAWF,EAAUC,EAAOhH,K,0BAKpD,SAAa+E,EAAOsC,EAAML,EAAOpB,EAAIc,GAAO,IAAD,OAEjC9B,EAAQ,IAAIX,EAAOqD,MAAM,GAAI,CAC/BC,SAAUxC,EACVyC,OAAQ,IAAIvD,EAAOwD,MAAM,IAAK,MAIlC7C,EAAM8C,WAAN,oCACkBtI,IAAOuI,OADzB,yCAEoBvI,IAAOiI,KAF3B,aAEoCA,EAFpC,oCAGaL,EAHb,6CAQApC,EAAMgD,SAASnE,GAGfmB,EAAMc,iBAAiB,SAAS,WAE5B,EAAKF,eAAeI,GAGpB,EAAKxC,IAAI6B,cAAcF,EAAO2B,GAG9BmB,YAAW,WAEP,EAAKzE,IAAI0E,kBACV,MAGP/I,KAAKqE,IAAI2E,WAAWnD,K,wBAIxB,SAAWG,EAAOsC,EAAML,EAAOpB,GAAK,IAAD,OAEzBhB,EAAQ,IAAIX,EAAOqD,MAAM,GAAI,CAC/BC,SAAUxC,EACVyC,OAAQ,IAAIvD,EAAOwD,MAAM,IAAK,MAIlC7C,EAAM8C,WAAN,oCACkBtI,IAAO4I,KADzB,4CAEuB5I,IAAO6I,UAF9B,aAE4CZ,EAF5C,iDAGuBjI,IAAO8I,SAH9B,aAG2ClB,EAH3C,oDAIoB5H,IAAO+I,MAJ3B,yCASAvD,EAAMgD,SAASnE,GAGfmB,EAAMc,iBAAiB,SAAS,SAACvE,GAC7B,EAAKiH,cAAcxC,MAIvB7G,KAAKqE,IAAI2E,WAAWnD,K,kEAIxB,WAAqBgB,GAArB,eAAAZ,EAAA,sEAEQ,IAAMa,QAAQ,aAAc,EAAG,MAAM,GAF7C,SAG0BC,IAAIC,IAAJ,yBAA0BH,IAHpD,OAGcI,EAHd,OAIQ,IAAMC,OACNlH,KAAK4G,SAAS,CACVtB,WAAY2B,EAAIE,KAAKC,KAAKkC,KAE1B/D,YAAY,IARxB,gDAWQ,IAAM2B,OAXd,yD,qFAgBA,WAAoB,IAAD,OACf,OAAOlH,KAAKqF,MAAMC,WAAWjB,KAAI,SAAAoD,GAAI,OACjC,cAAC,IAAD,CAGI/D,IAAK6F,IAAW9B,EAAK+B,SACrBjG,QAAS,kBAAM,EAAK1D,MAAMC,QAAQ2J,KAAnB,kBAAmChC,EAAKiC,aACvD/F,MAAO8D,EAAK9D,MACZC,KAAM6D,EAAK7D,KACXC,KAAM4D,EAAK5D,KACXC,MAAO2D,EAAK3D,OAPP2D,EAAKiC,gB,oBAYtB,WACI,OACI,sBAAKxJ,UAAWG,IAAOgE,IAAvB,UAEI,cAAC,IAAD,uCAIA,qBAAKwC,GAAG,YAAY3G,UAAWG,IAAOsJ,YAGtC,sBACAzJ,UAAW,CACPG,IAAOuJ,UACP5J,KAAKqF,MAAME,WAAalF,IAAOwJ,KAAO,IACxCtJ,KAAK,KAJP,UAMI,sBAAKL,UAAWG,IAAOyJ,UAAvB,UACI,oBAAI5J,UAAWG,IAAO0J,UAAtB,sCACA,cAAC,IAAD,CAAM7J,UAAWG,IAAO2J,UAAWC,GAAG,aAAtC,yCAIJ,qBAAK/J,UAAWG,IAAO6J,WAAvB,SAEKlK,KAAKmK,+B,GAtPGzJ","file":"static/js/16.2fb84cf2.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport {withRouter} from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport {NavBar} from 'antd-mobile'\r\nimport styles from './index.module.css'\r\n\r\nclass MyNavBar extends Component {\r\n    // 属性校验\r\n    static propTypes = {\r\n        children: PropTypes.string.isRequired,\r\n        onLeftClick: PropTypes.func,\r\n        className: PropTypes.string,\r\n        rightContent: PropTypes.array\r\n    }\r\n\r\n    // 默认点击返回按钮事件\r\n    defaultClick = () => this.props.history.goBack();\r\n    render() {\r\n        const {children, className, rightContent, onLeftClick} = this.props;\r\n        return (\r\n            <div>\r\n                <NavBar\r\n                    className={[styles.navbar, className || ''].join(' ')}\r\n                    mode=\"light\"\r\n                    icon={<i className=\"iconfont icon-back\"/>}\r\n                    onLeftClick={onLeftClick || this.defaultClick} \r\n                    rightContent={rightContent}\r\n                >\r\n                    {children}\r\n                </NavBar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(MyNavBar);\r\n/* \r\n此组件用于封装顶部导航栏\r\n只有路由组件才有history 等API\r\n于是， 利用 withRouter（）函数 包裹一般组件，就可以把一般组件变成路由组件 \r\n*/","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"MyNavBar_navbar__1MYpP\"};","'use strict';\n\nrequire('../../style/css');\n\nrequire('./index.css');","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _react = require('react');\n\nvar React = _interopRequireWildcard(_react);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar __rest = undefined && undefined.__rest || function (s, e) {\n    var t = {};\n    for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    }if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n        if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n    }return t;\n};\n\nvar NavBar = function (_React$Component) {\n    (0, _inherits3['default'])(NavBar, _React$Component);\n\n    function NavBar() {\n        (0, _classCallCheck3['default'])(this, NavBar);\n        return (0, _possibleConstructorReturn3['default'])(this, (NavBar.__proto__ || Object.getPrototypeOf(NavBar)).apply(this, arguments));\n    }\n\n    (0, _createClass3['default'])(NavBar, [{\n        key: 'render',\n        value: function render() {\n            var _a = this.props,\n                prefixCls = _a.prefixCls,\n                className = _a.className,\n                children = _a.children,\n                mode = _a.mode,\n                icon = _a.icon,\n                onLeftClick = _a.onLeftClick,\n                leftContent = _a.leftContent,\n                rightContent = _a.rightContent,\n                restProps = __rest(_a, [\"prefixCls\", \"className\", \"children\", \"mode\", \"icon\", \"onLeftClick\", \"leftContent\", \"rightContent\"]);\n            return React.createElement(\n                'div',\n                (0, _extends3['default'])({}, restProps, { className: (0, _classnames2['default'])(className, prefixCls, prefixCls + '-' + mode) }),\n                React.createElement(\n                    'div',\n                    { className: prefixCls + '-left', role: 'button', onClick: onLeftClick },\n                    icon ?\n                    // tslint:disable-next-line:jsx-no-multiline-js\n                    React.createElement(\n                        'span',\n                        { className: prefixCls + '-left-icon', 'aria-hidden': 'true' },\n                        icon\n                    ) : null,\n                    leftContent\n                ),\n                React.createElement(\n                    'div',\n                    { className: prefixCls + '-title' },\n                    children\n                ),\n                React.createElement(\n                    'div',\n                    { className: prefixCls + '-right' },\n                    rightContent\n                )\n            );\n        }\n    }]);\n    return NavBar;\n}(React.Component);\n\nexports['default'] = NavBar;\n\nNavBar.defaultProps = {\n    prefixCls: 'am-navbar',\n    mode: 'dark',\n    onLeftClick: function onLeftClick() {}\n};\nmodule.exports = exports['default'];","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styles from './index.module.css'\r\n\r\nexport default class HouseItem extends Component {\r\n    static propTypes = {\r\n        src: PropTypes.string,\r\n        title: PropTypes.string,\r\n        desc: PropTypes.string,\r\n        tags: PropTypes.array.isRequired,\r\n        price: PropTypes.number,\r\n        onClick: PropTypes.func\r\n    }\r\n\r\n    render() {\r\n        const {src, title, desc, tags, price, style, onClick} = this.props;\r\n        return (\r\n            <div className={styles.house} style={style} onClick={onClick} >\r\n                <div className={styles.imgWrap}>\r\n                <img\r\n                    className={styles.img}\r\n                    src={src}\r\n                    alt=\"\"\r\n                />\r\n                </div>\r\n                <div className={styles.content}>\r\n                    <h3 className={styles.title}>{title}</h3>\r\n                    <div className={styles.desc}>{desc}</div>\r\n                    <div>\r\n                        {/* ['近地铁', '随时看房'] */}\r\n                        {tags.map((tag, index) => {\r\n                            const tagClass = 'tag' + (index % 4 + 1)\r\n                            return (\r\n                                <span\r\n                                    className={[styles.tag, styles[tagClass]].join(' ')}\r\n                                    key={tag}\r\n                                >\r\n                                    {tag}\r\n                                </span>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                    <div className={styles.price}>\r\n                        <span className={styles.priceNum}>{price}</span> 元/月\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"house\":\"HouseItem_house__3Avqi\",\"imgWrap\":\"HouseItem_imgWrap__ocbSI\",\"img\":\"HouseItem_img__T4LVu\",\"content\":\"HouseItem_content__1Uucg\",\"title\":\"HouseItem_title__ZGRaa\",\"desc\":\"HouseItem_desc__126ya\",\"price\":\"HouseItem_price__nJXZ4\",\"priceNum\":\"HouseItem_priceNum__3ms0A\",\"tag\":\"HouseItem_tag__atV98\",\"tag1\":\"HouseItem_tag1__6i_w3\",\"tag2\":\"HouseItem_tag2__32HGp\",\"tag3\":\"HouseItem_tag3__1MKZo\",\"tag4\":\"HouseItem_tag4__25svf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"map\":\"Map_map__3YDuX\",\"container\":\"Map_container__1G_td\",\"bubble\":\"Map_bubble__1J3BN\",\"name\":\"Map_name__23_rj\",\"rect\":\"Map_rect__1hGTe\",\"arrow\":\"Map_arrow__2-KCD\",\"housename\":\"Map_housename__2sSwi\",\"housenum\":\"Map_housenum__3b9Pm\",\"houseList\":\"Map_houseList__21auu\",\"show\":\"Map_show__2tfH2\",\"titleWrap\":\"Map_titleWrap__2E3zC\",\"listTitle\":\"Map_listTitle__1uU2x\",\"titleMore\":\"Map_titleMore___NMGH\",\"houseItems\":\"Map_houseItems__3BXBC\"};","import React, { Component } from 'react';\r\nimport API from '../../utils/api';\r\nimport { Link } from 'react-router-dom';\r\nimport { Toast } from 'antd-mobile';\r\nimport { BASE_URL } from '../../utils/url';\r\nimport MyNavBar from '../../components/MyNavBar';\r\nimport HouseItem from '../../components/HouseItem';\r\nimport styles from './index.module.css';\r\n\r\n// 覆盖物样式\r\nconst labelStyle = {\r\n    cursor: 'pointer',\r\n    border: '0px solid rgb(255, 0, 0)',\r\n    padding: '0px',\r\n    whiteSpace: 'nowrap',\r\n    fontSize: '10px',\r\n    color: 'rgb(255, 255, 255)',\r\n    textAlign: 'center'\r\n};\r\n\r\nconst BMapGL = window.BMapGL;\r\nexport default class Map extends Component {\r\n    state = {\r\n        // 小区下的房源列表\r\n        housesList: [],\r\n        // 表示是否展示房源列表\r\n        isShowList: false\r\n    }\r\n    componentDidMount () {\r\n        this.setMap()\r\n    }\r\n\r\n    // 创建地图并进行相应从初始化\r\n    setMap () {\r\n        // 初始化地图实例\r\n        const map = new BMapGL.Map('container');\r\n        // 获取当前定位城市\r\n        const {label, value} = JSON.parse( localStorage.getItem('zfy_city') );\r\n        // 在其他方法中通过 this 来获取到地图对象\r\n        this.map = map;\r\n        //创建地址解析器实例\r\n        const myGeo = new BMapGL.Geocoder();\r\n        // 将地址解析结果显示在地图上，并调整地图视野\r\n        myGeo.getPoint(label, async point => {\r\n            if (point) {\r\n                // 定位到中心点坐标\r\n                map.centerAndZoom(point, 12);\r\n                // 开启鼠标滚轮缩放\r\n                map.enableScrollWheelZoom(true); \r\n                // 设置地图初始倾斜角度n\r\n                map.setTilt(20); \r\n                // 添加比例尺控件\r\n                map.addControl(new BMapGL.ScaleControl());\r\n                // 添加缩放控件\r\n                map.addControl(new BMapGL.ZoomControl());\r\n                // 添加定位控件\r\n                map.addControl(new BMapGL.LocationControl());\r\n\r\n                // 调用 renderOverlays 方法\r\n                this.renderOverlays(value);\r\n            } else {\r\n                Toast.info('您选择的地址没有解析到结果!', 1, null, false);\r\n            }\r\n        }, label);\r\n        \r\n        // 给地图绑定移动事件\r\n        map.addEventListener('movestart', () => {\r\n            if (this.state.isShowList) {\r\n                this.setState({\r\n                    isShowList: false\r\n                })\r\n            }\r\n        })\r\n    }  \r\n    \r\n    // 渲染覆盖物入口\r\n    // 1 接收区域 id 参数，获取该区域下的房源数据\r\n    // 2 获取房源类型以及下级地图缩放级别\r\n    async renderOverlays(id) {\r\n        try {\r\n            Toast.loading('Loading...', 0, null, false);\r\n            const res = await API.get(`/area/map?id=${id}`);\r\n            Toast.hide();\r\n            const data = res.data.body;\r\n            \r\n            // 调用 getTypeAndZoom 方法获取级别和类型\r\n            const { nextZoom, type } = this.getTypeAndZoom();\r\n            \r\n            data.forEach(item => {\r\n                // 创建覆盖物\r\n                this.createOverlays(item, nextZoom, type);\r\n            })\r\n        } catch (error) {\r\n            Toast.hide();\r\n        }\r\n    }\r\n\r\n    // 计算要绘制的覆盖物类型和下一个缩放级别\r\n    // 区   -> 12 ，范围：>=11 <13\r\n    // 镇   -> 14 ，范围：>=13 <15\r\n    // 小区 -> 16 ，范围：>=15 <17\r\n    getTypeAndZoom() {\r\n        // 调用地图的 getZoom() 方法，来获取当前缩放级别\r\n        const zoom = this.map.getZoom();\r\n        let nextZoom, type;\r\n\r\n        if (zoom >= 11 && zoom < 13) {\r\n            // 此时地图级别为区，下一个缩放级别为镇：\r\n            nextZoom = 14;\r\n            // circle 表示绘制圆形覆盖物的形状\r\n            type = 'circle';\r\n        } else if (zoom >= 13 && zoom < 15) {\r\n            // 镇\r\n            nextZoom = 16;\r\n            type = 'circle';\r\n        } else if (zoom >= 15 && zoom < 17) {\r\n            // 小区\r\n            type = 'rect';\r\n        }\r\n\r\n        return {\r\n            nextZoom,\r\n            type\r\n        }\r\n    }\r\n\r\n    // 创建覆盖物\r\n    createOverlays(item, zoom, type) {\r\n        const {\r\n            coord: { longitude, latitude },\r\n            label: areaName,\r\n            count,\r\n            value\r\n        } = item;\r\n\r\n        // 创建坐标对象\r\n        const areaPoint = new BMapGL.Point(longitude, latitude);\r\n        if (type === 'circle') {\r\n            this.createCircle(areaPoint, areaName, count, value, zoom)\r\n        } else {\r\n            this.createRect(areaPoint, areaName, count, value)\r\n        }\r\n    }\r\n\r\n    // 创建圆形覆盖物（区、镇覆盖物）\r\n    createCircle(point, name, count, id, zoom) {\r\n        // 创建覆盖物\r\n        const label = new BMapGL.Label('', {\r\n            position: point,\r\n            offset: new BMapGL.Size(-25, -25)\r\n        });\r\n\r\n        // 设置房源覆盖物内容\r\n        label.setContent(`\r\n            <div class=\"${styles.bubble}\">\r\n                <p class=\"${styles.name}\">${name}</p>\r\n                <p>${count}套</p>\r\n            </div>\r\n        `);\r\n\r\n        // 设置样式\r\n        label.setStyle(labelStyle);\r\n\r\n        // 添加单击事件\r\n        label.addEventListener('click', () => {\r\n            // 调用 renderOverlays 方法，获取该区域下的房源数据\r\n            this.renderOverlays(id);\r\n\r\n            // 放大地图，以当前点击的覆盖物为中心放大地图\r\n            this.map.centerAndZoom(point, zoom);\r\n\r\n            // 解决清除覆盖物时，百度地图API的JS文件自身报错的问题\r\n            setTimeout(() => {\r\n                // 清除当前覆盖物信息\r\n                this.map.clearOverlays()\r\n            }, 0)\r\n        });\r\n        // 添加覆盖物到地图中\r\n        this.map.addOverlay(label);\r\n    }\r\n\r\n    // 创建矩形覆盖物（小区覆盖物）\r\n    createRect(point, name, count, id) {\r\n        // 创建覆盖物\r\n        const label = new BMapGL.Label('', {\r\n            position: point,\r\n            offset: new BMapGL.Size(-50, -28)\r\n        });\r\n    \r\n        // 设置房源覆盖物内容\r\n        label.setContent(`\r\n            <div class=\"${styles.rect}\">\r\n                <span class=\"${styles.housename}\">${name}</span>\r\n                <span class=\"${styles.housenum}\">${count}套</span>\r\n                <i class=\"${styles.arrow}\"></i>\r\n            </div>\r\n        `);\r\n    \r\n        // 设置样式\r\n        label.setStyle(labelStyle);\r\n    \r\n        // 添加单击事件\r\n        label.addEventListener('click', (e) => {\r\n            this.getHousesList(id);\r\n        });\r\n\r\n        // 添加覆盖物到地图中\r\n        this.map.addOverlay(label);\r\n    }\r\n\r\n    // 获取小区房源数据\r\n    async getHousesList (id) {\r\n        try {\r\n            Toast.loading('Loading...', 0, null, false); \r\n            const res = await API.get(`/houses?cityId=${id}`);\r\n            Toast.hide();\r\n            this.setState({\r\n                housesList: res.data.body.list,\r\n                // 展示房源列表\r\n                isShowList: true\r\n            });\r\n        } catch (error) {\r\n            Toast.hide();\r\n        }\r\n    }\r\n    \r\n    // 封装渲染房屋列表的方法\r\n    renderHousesList() {\r\n        return this.state.housesList.map(item => (\r\n            <HouseItem\r\n                key={item.houseCode}\r\n                // 图片地址\r\n                src={BASE_URL + item.houseImg}\r\n                onClick={() => this.props.history.push(`/detail/${item.houseCode}`)}\r\n                title={item.title}\r\n                desc={item.desc}\r\n                tags={item.tags}\r\n                price={item.price}\r\n            />\r\n        ))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles.map}>\r\n                {/* 顶部导航韩 */}\r\n                <MyNavBar>\r\n                    地图找房\r\n                </MyNavBar>\r\n                {/* 地图容器 */}\r\n                <div id=\"container\" className={styles.container} />  \r\n                {/* 房源列表 */}\r\n                {/* 添加 styles.show 展示房屋列表 */}\r\n                <div\r\n                className={[\r\n                    styles.houseList,\r\n                    this.state.isShowList ? styles.show : ''\r\n                ].join(' ')}\r\n                >\r\n                    <div className={styles.titleWrap}>\r\n                        <h1 className={styles.listTitle}>房屋列表</h1>\r\n                        <Link className={styles.titleMore} to=\"/home/list\">\r\n                            更多房源\r\n                        </Link>\r\n                    </div>\r\n                    <div className={styles.houseItems}>\r\n                        {/* 房屋结构 */}\r\n                        {this.renderHousesList()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"],"sourceRoot":""}