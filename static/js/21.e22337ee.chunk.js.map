{"version":3,"sources":["components/MyNavBar/index.js","components/MyNavBar/index.module.css","pages/Login/index.module.css","pages/Login/index.js"],"names":["MyNavBar","defaultClick","props","history","goBack","this","children","className","rightContent","onLeftClick","styles","navbar","join","mode","icon","Component","withRouter","module","exports","Login","state","username","password","root","navHeader","size","form","formItem","input","name","placeholder","error","component","type","formSubmit","submit","backHome","Item","to","withFormik","mapPropsToValues","validationSchema","yup","shape","required","matches","handleSubmit","values","a","API","post","res","data","status","body","description","localStorage","setItem","token","location","replace","from","pathname","info"],"mappings":"uMAMMA,E,4MAUFC,aAAe,kBAAM,EAAKC,MAAMC,QAAQC,U,4CACxC,WAAU,IAAD,EACoDC,KAAKH,MAAvDI,EADF,EACEA,SAAUC,EADZ,EACYA,UAAWC,EADvB,EACuBA,aAAcC,EADrC,EACqCA,YAC1C,OACI,8BACI,mBACIF,UAAW,CAACG,IAAOC,OAAQJ,GAAa,IAAIK,KAAK,KACjDC,KAAK,QACLC,KAAM,mBAAGP,UAAU,uBACnBE,YAAaA,GAAeJ,KAAKJ,aACjCO,aAAcA,EALlB,SAOKF,U,GAtBES,aA6BRC,gBAAWhB,I,oBClC1BiB,EAAOC,QAAU,CAAC,OAAS,2B,oBCA3BD,EAAOC,QAAU,CAAC,KAAO,oBAAoB,UAAY,yBAAyB,SAAW,wBAAwB,KAAO,oBAAoB,SAAW,wBAAwB,MAAQ,qBAAqB,OAAS,sBAAsB,MAAQ,uB,yRCiBjPC,E,4MACFC,MAAQ,CACJC,SAAU,GACVC,SAAU,I,4CAGd,WACI,OACI,sBAAKf,UAAWG,IAAOa,KAAvB,UACI,cAAC,IAAD,CAAUhB,UAAWG,IAAOc,UAA5B,sCAGA,mBAAYC,KAAK,OAIjB,8BACI,eAAC,IAAD,CAAMlB,UAAWG,IAAOgB,KAAxB,UACI,qBAAKnB,UAAWG,IAAOiB,SAAvB,SACI,cAAC,IAAD,CACIpB,UAAWG,IAAOkB,MAClBC,KAAK,WACLC,YAAY,qCAGpB,cAAC,IAAD,CAAcvB,UAAWG,IAAOqB,MAAOF,KAAK,WAAWG,UAAU,QACjE,qBAAKzB,UAAWG,IAAOiB,SAAvB,SACI,cAAC,IAAD,CACIpB,UAAWG,IAAOkB,MAClBC,KAAK,WACLI,KAAK,WACLH,YAAY,qCAGpB,cAAC,IAAD,CAAcvB,UAAWG,IAAOqB,MAAOF,KAAK,WAAWG,UAAU,QACjE,qBAAKzB,UAAWG,IAAOwB,WAAvB,SACI,wBACI3B,UAAWG,IAAOyB,OAClBF,KAAK,SAFT,iCAMR,mBAAM1B,UAAWG,IAAO0B,SAAxB,SACI,kBAAMC,KAAN,UACI,cAAC,IAAD,CAAMC,GAAG,YAAT,4E,GA5CRvB,aAsDpBI,EAAQoB,YAAW,CAEfC,iBAAiB,iBAAO,CAAEnB,SAAU,GAAIC,SAAU,KAElDmB,iBAAkBC,MAAaC,MAAM,CACjCtB,SAAUqB,MAAaE,SAAS,4BAAQC,QA7D9B,qBA6DiD,qIAC3DvB,SAAUoB,MAAaE,SAAS,4BAAQC,QA7DhC,sBA6DiD,wIAG7DC,aAAa,WAAD,4BAAE,WAAQC,EAAR,gCAAAC,EAAA,6DAAkB9C,EAAlB,EAAkBA,MAEpBmB,EAAuB0B,EAAvB1B,SAAUC,EAAayB,EAAbzB,SAFR,SAGQ2B,IAAIC,KAAK,cAAe,CACtC7B,WACAC,aALM,OAGJ6B,EAHI,SAS4BA,EAAIC,KAAlCC,EATE,EASFA,OAAQC,EATN,EASMA,KAAMC,EATZ,EASYA,YACN,MAAXF,GAGDG,aAAaC,QAAQ,YAAaH,EAAKI,OAClCxD,EAAMyD,SAASvC,MAKhBlB,EAAMC,QAAQyD,QAAQ1D,EAAMyD,SAASvC,MAAMyC,KAAKC,UAHhD5D,EAAMC,QAAQC,UAOlB,IAAM2D,KAAKR,EAAa,EAAG,MAAM,GAvB3B,2CAAF,qDAAC,IATThB,CAmCLpB,GACYA","file":"static/js/21.e22337ee.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport {withRouter} from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport {NavBar} from 'antd-mobile'\r\nimport styles from './index.module.css'\r\n\r\nclass MyNavBar extends Component {\r\n    // 属性校验\r\n    static propTypes = {\r\n        children: PropTypes.string.isRequired,\r\n        onLeftClick: PropTypes.func,\r\n        className: PropTypes.string,\r\n        rightContent: PropTypes.array\r\n    }\r\n\r\n    // 默认点击返回按钮事件\r\n    defaultClick = () => this.props.history.goBack();\r\n    render() {\r\n        const {children, className, rightContent, onLeftClick} = this.props;\r\n        return (\r\n            <div>\r\n                <NavBar\r\n                    className={[styles.navbar, className || ''].join(' ')}\r\n                    mode=\"light\"\r\n                    icon={<i className=\"iconfont icon-back\"/>}\r\n                    onLeftClick={onLeftClick || this.defaultClick} \r\n                    rightContent={rightContent}\r\n                >\r\n                    {children}\r\n                </NavBar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(MyNavBar);\r\n/* \r\n此组件用于封装顶部导航栏\r\n只有路由组件才有history 等API\r\n于是， 利用 withRouter（）函数 包裹一般组件，就可以把一般组件变成路由组件 \r\n*/","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"MyNavBar_navbar__39ut8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Login_root__12ozF\",\"navHeader\":\"Login_navHeader__14Rkf\",\"backHome\":\"Login_backHome__h_Zu_\",\"form\":\"Login_form__1-vqp\",\"formItem\":\"Login_formItem__3VlN4\",\"input\":\"Login_input__2nOXN\",\"submit\":\"Login_submit__1qOlK\",\"error\":\"Login_error__1PHbl\"};","import React, { Component } from 'react'\r\n\r\nimport { Flex, WingBlank, WhiteSpace, Toast } from 'antd-mobile'\r\n\r\nimport { Link } from 'react-router-dom'\r\n// 引入withFormik高阶组件，用于表单校验\r\nimport { withFormik, Form, Field, ErrorMessage } from 'formik'\r\n// 导入yup\r\nimport * as yup from 'yup'\r\n\r\nimport API from '../../utils/api'\r\nimport MyNavBar from '../../components/MyNavBar'\r\n\r\nimport styles from './index.module.css'\r\n\r\n// 校验规则\r\nconst REG_UNAME = /^[a-zA-Z_\\d]{5,8}$/;\r\nconst REG_PWD = /^[a-zA-Z_\\d]{5,12}$/;\r\nclass Login extends Component {\r\n    state = {\r\n        username: '',\r\n        password: ''\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles.root}>\r\n                <MyNavBar className={styles.navHeader} >\r\n                    账号登录\r\n                </MyNavBar>\r\n                <WhiteSpace size=\"x1\" />\r\n\r\n                {/* 登录表单 */}\r\n                {/* 左右留白 */}\r\n                <WingBlank>\r\n                    <Form className={styles.form} >\r\n                        <div className={styles.formItem}>\r\n                            <Field \r\n                                className={styles.input} \r\n                                name=\"username\" \r\n                                placeholder=\"请输入账号\" \r\n                            ></Field>\r\n                        </div>\r\n                        <ErrorMessage className={styles.error} name=\"username\" component=\"div\"></ErrorMessage>\r\n                        <div className={styles.formItem}>\r\n                            <Field \r\n                                className={styles.input} \r\n                                name=\"password\" \r\n                                type=\"password\"\r\n                                placeholder=\"请输入密码\" \r\n                            ></Field>\r\n                        </div>\r\n                        <ErrorMessage className={styles.error} name=\"password\" component=\"div\"></ErrorMessage>\r\n                        <div className={styles.formSubmit}>\r\n                            <button\r\n                                className={styles.submit}\r\n                                type=\"submit\"\r\n                            >登  录</button>\r\n                        </div>\r\n                    </Form>\r\n                    <Flex className={styles.backHome}>\r\n                        <Flex.Item>\r\n                            <Link to=\"/register\">没有账号？去注册</Link>\r\n                        </Flex.Item>\r\n                    </Flex>\r\n                </WingBlank>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nLogin = withFormik({\r\n    // 为Login组件提供状态\r\n    mapPropsToValues:() => ({ username: '', password: '' }),\r\n    // 添加校验规则\r\n    validationSchema: yup.object().shape({\r\n        username: yup.string().required('账号必填').matches(REG_UNAME, '账号长度为5~8位，只能由数字、字母、下划线组成'),\r\n        password: yup.string().required('密码必填').matches(REG_PWD, '密码长度为5~12位，只能由数字、字母、下划线组成'),\r\n    }),\r\n    // 为Login提供表单提交方法\r\n    handleSubmit: async ( values, { props } ) => {\r\n        // 获取账号、密码\r\n        const { username, password } = values;\r\n        const res = await API.post('/user/login', {\r\n            username,\r\n            password\r\n        });\r\n\r\n        // 获取返回数据\r\n        const { status, body, description } = res.data;\r\n        if ( status === 200 ) {\r\n            // 登录成功\r\n            // 将tolen存储到本地\r\n            localStorage.setItem('zfy_token', body.token);\r\n            if (!props.location.state) {\r\n                // 用户直接点击登录按钮\r\n                props.history.goBack();\r\n            } else {\r\n                // 用户通过其他地方跳转至登录页面\r\n                props.history.replace(props.location.state.from.pathname)\r\n            }\r\n        } else {\r\n            // 登录失败\r\n            Toast.info(description, 2, null, false);\r\n        }\r\n    }\r\n})(Login);\r\nexport default Login"],"sourceRoot":""}